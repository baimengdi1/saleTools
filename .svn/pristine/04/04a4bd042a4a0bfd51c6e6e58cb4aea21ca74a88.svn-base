
<template>

  <div class="resourseDetails">
    
          <tree-table :data="data" :columns="columns" border />
    <siteHeader></siteHeader>
    <div class="content">
      <systemLeftTab :active="systemLeftTabActive"></systemLeftTab>
      <div class="resourseBox">
        <div class="pageHead">
          <h1>
            <i class="el-icon-d-arrow-right"></i> 对字典数据设置,输入数据不能包含'-'号...
          </h1>
        </div>
        <el-row>
          <el-tabs v-model="activeName" type="card" @tab-click="handleClick">
            <el-tab-pane label="资源分类" name="资源分类">
              <el-row>
                <el-button
                  @click="handleRowEditClick()"
                  type="primary"
                  class="addBtn"
                  icon="el-icon-circle-plus-outline"
                  size="small"
                >添加资源分类</el-button>
              </el-row>
              <el-table :data="tableData" border style="width: 100%">
                <el-table-column prop="date" label="一级分类" width="330"></el-table-column>
                <el-table-column prop="name" label="二级分类" width="330"></el-table-column>
                <el-table-column prop="address" label="三级分类" width="330"></el-table-column>
                <el-table-column label="操作">
                  <template slot-scope="scope">
                    <el-switch
                      v-model="autoUpdate"
                      active-color="#5eb058"
                      inactive-color="#cccccc"
                      disabled
                      @click.native="handleUpdate(autoUpdate,scope.row)"
                    ></el-switch>
                    <el-button
                      style="margin-left:10px;"
                      type="text"
                      @click="handleRowEditClick(scope.row)"
                      size="small"
                    >修改</el-button>
                  </template>
                </el-table-column>
              </el-table>
              <!-- 分页器 -->
              <div class="elPagination">
                <el-pagination
                  background
                  layout="prev, pager, next"
                  :current-page.sync="currentPage"
                  @current-change="nextClick"
                  :total="AllPagingNumber"
                ></el-pagination>
              </div>
            </el-tab-pane>
            <el-tab-pane label="反馈收件人" name="反馈收件人">
              <el-row>
                <el-button
                  @click="feedbackHandleRowEditClick()"
                  type="primary"
                  class="addBtn"
                  icon="el-icon-circle-plus-outline"
                  size="small"
                >添加反馈收件人</el-button>
              </el-row>
              <el-table :data="feedbackTableData" border style="width: 100%">
                <el-table-column prop="name" label="用户名" width="500"></el-table-column>
                <el-table-column prop="email" label="邮箱" width="500"></el-table-column>
                <el-table-column label="操作">
                  <template slot-scope="scope">
                    <el-button
                      @click="feedbackHandleRowClick(scope.row)"
                      type="text"
                      size="small"
                    >删除</el-button>
                    <el-button
                      type="text"
                      @click="feedbackHandleRowEditClick(scope.row)"
                      size="small"
                    >修改</el-button>
                  </template>
                </el-table-column>
              </el-table>
              <!-- 分页器 -->
              <div class="elPagination">
                <el-pagination
                  background
                  layout="prev, pager, next"
                  :current-page.sync="feedbackCurrentPage"
                  @current-change="feedbackNextClick"
                  :total="feedbackAllPagingNumber"
                ></el-pagination>
              </div>
            </el-tab-pane>
          </el-tabs>
        </el-row>
      </div>
      <siteFooter></siteFooter>
    </div>
    <!-- 弹窗聚集地 -->
    <el-dialog title="资源分类" :visible.sync="editDialog">
      <el-form
        :model="ruleForm"
        :rules="rules"
        ref="ruleForm"
        label-width="100px"
        class="demo-ruleForm"
      >
        <el-form-item label="一级分类" prop="firstClass">
          <el-input v-model="ruleForm.firstClass" placeholder="请输入"></el-input>
        </el-form-item>

        <el-form-item label="二级分类" prop="secondClass">
          <el-input v-model="ruleForm.secondClass" placeholder="请输入"></el-input>
        </el-form-item>

        <el-form-item label="三级分类" prop="thirdClass">
          <el-input v-model="ruleForm.thirdClass" placeholder="请输入"></el-input>
        </el-form-item>
        <el-form-item label="四级分类" prop="fourClass">
          <el-input v-model="ruleForm.fourClass" placeholder="请输入"></el-input>
        </el-form-item>
        <el-form-item label="五级分类" prop="fiveClass">
          <el-input v-model="ruleForm.fiveClass" placeholder="请输入"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="editDialog = false">取 消</el-button>
        <el-button type="primary" @click="editDialogBtn">确 定</el-button>
      </div>
    </el-dialog>
    <el-dialog title="反馈收件人" :visible.sync="feedbackEditDialog">
      <el-form
        :model="feedbackRuleForm"
        :rules="feedbackRule"
        ref="feedbackRuleForm"
        label-width="100px"
        class="demo-ruleForm"
      >
        <el-form-item label="用户名" prop="name">
          <el-input v-model="feedbackRuleForm.name" placeholder="请输入"></el-input>
        </el-form-item>
        <el-form-item label="邮箱" prop="email">
          <el-input v-model="feedbackRuleForm.email" placeholder="请输入"></el-input>
        </el-form-item>
      </el-form>
      <div slot="footer" class="dialog-footer">
        <el-button @click="feedbackEditDialog = false">取 消</el-button>
        <el-button type="primary" @click="feedbackEditDialogBtn">确 定</el-button>
      </div>
    </el-dialog>
  </div>
</template>
<script>
import treeTable from "@/components/tree-table.vue";
import systemLeftTab from "@/components/systemLeftTab.vue";
import siteHeader from "@/components/siteHeader.vue";
import siteFooter from "@/components/siteFooter.vue";
export default {
  data() {
    return {
      systemLeftTabActive: "7",
      activeName: "资源分类",
      autoUpdate: false,
      currentPage: 0, //资源分类列表当前页
      AllPagingNumber: 0, //资源分类列表分页总数
      feedbackCurrentPage: 0, //反馈列表当前页
      feedbackAllPagingNumber: 0, //反馈列表分页总数
      editDialog: false, //弹框
      feedbackEditDialog: false, //弹框
      tableData: [
        {
          date: "2016-05-02",
          name: "王小虎",
          address: "上海市普陀区金沙江路 1518 弄"
        },
        {
          date: "2016-05-04",
          name: "王小虎",
          address: "上海市普陀区金沙江路 1517 弄"
        },
        {
          date: "2016-05-01",
          name: "王小虎",
          address: "上海市普陀区金沙江路 1519 弄"
        },
        {
          date: "2016-05-03",
          name: "王小虎",
          address: "上海市普陀区金沙江路 1516 弄"
        }
      ],
      feedbackTableData: [
        {
          date: "2016-05-02",
          name: "王小虎",
          email: "m17600726327@163.com"
        },
        {
          date: "2016-05-04",
          name: "王小虎",
          email: "m17600726327@163.com"
        },
        {
          date: "2016-05-01",
          name: "王小虎",
          email: "m17600726327@163.com"
        },
        {
          date: "2016-05-03",
          name: "王小虎",
          email: "m17600726327@163.com"
        }
      ],
      ruleForm: {
        firstClass: "",
        secondClass: "",
        thirdClass: "",
        fourClass: "",
        fiveClass: ""
      },
      rules: {
        firstClass: [
          { required: true, message: "请填写一级分类！", trigger: "blur" }
        ],
        secondClass: [
          { required: true, message: "请填写二级分类！", trigger: "blur" }
        ],
        thirdClass: [
          { required: true, message: "请填写三级分类！", trigger: "blur" }
        ],
        fourClass: [
          { required: true, message: "请填写四级分类！", trigger: "blur" }
        ],
        fiveClass: [
          { required: true, message: "请填写五级分类！", trigger: "blur" }
        ]
      },
      feedbackRuleForm: {
        name: "",
        email: ""
      },
      feedbackRule: {
        name: [{ required: true, message: "请填写用户名！", trigger: "blur" }],
        email: [
          { required: true, message: "请输入邮箱地址！", trigger: "blur" },
          {
            type: "email",
            message: "请输入正确的邮箱地址",
            trigger: ["blur"]
          }
        ]
      },
      columns: [
        {
          text: "事件",
          value: "event",
          width: 200
        },
        {
          text: "ID",
          value: "id"
        },
        {
          text: "时间线",
          value: "timeLine"
        },
        {
          text: "备注",
          value: "comment"
        }
      ],
      data: [
        {
          id: 0,
          event: "事件1",
          timeLine: 50,
          comment: "无"
        },
        {
          id: 1,
          event: "事件1",
          timeLine: 100,
          comment: "无",
          children: [
            {
              id: 2,
              event: "事件2",
              timeLine: 10,
              comment: "无"
            },
            {
              id: 3,
              event: "事件3",
              timeLine: 90,
              comment: "无",
              children: [
                {
                  id: 4,
                  event: "事件4",
                  timeLine: 5,
                  comment: "无"
                },
                {
                  id: 5,
                  event: "事件5",
                  timeLine: 10,
                  comment: "无"
                },
                {
                  id: 6,
                  event: "事件6",
                  timeLine: 75,
                  comment: "无",
                  children: [
                    {
                      id: 7,
                      event: "事件7",
                      timeLine: 50,
                      comment: "无",
                      children: [
                        {
                          id: 71,
                          event: "事件71",
                          timeLine: 25,
                          comment: "xx"
                        },
                        {
                          id: 72,
                          event: "事件72",
                          timeLine: 5,
                          comment: "xx"
                        },
                        {
                          id: 73,
                          event: "事件73",
                          timeLine: 20,
                          comment: "xx"
                        }
                      ]
                    },
                    {
                      id: 8,
                      event: "事件8",
                      timeLine: 25,
                      comment: "无"
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    };
  },
  mounted() {},
  components: { siteHeader, siteFooter, systemLeftTab, treeTable },
  methods: {
    handleClick(tab, event) {
      console.log(tab, event);
    },
    //分页下一页
    nextClick() {},
    //分页下一页
    feedbackNextClick() {},
    // 点击开启开关
    handleUpdate(autoUpdate, row) {
      console.log(autoUpdate, row);
      if (!autoUpdate) {
        this.$alert("确定启用", "启用", {
          confirmButtonText: "确定",
          callback: action => {
            console.log(row);
            this.autoUpdate = true;
          }
        });
      } else {
        this.$alert("确定关闭", "关闭", {
          confirmButtonText: "确定",
          callback: action => {
            this.autoUpdate = false;
            console.log(row);
          }
        });
      }
    },
    // 关闭
    handleRowCloseClick(row) {
      this.$alert("确定关闭", "关闭", {
        confirmButtonText: "确定",
        callback: action => {
          console.log(row);
        }
      });
    },
    //启用
    handleRowOpenClick(row) {
      this.$alert("确定启用", "启用", {
        confirmButtonText: "确定",
        callback: action => {
          console.log(row);
        }
      });
    },
    // 资源分类删除
    handleRowClick(row) {
      this.$alert("确定删除", "删除", {
        confirmButtonText: "确定",
        callback: action => {
          console.log(row);
        }
      });
    },
    // 发馈人删除
    feedbackHandleRowClick(row) {
      this.$alert("确定删除", "删除", {
        confirmButtonText: "确定",
        callback: action => {
          console.log(row);
        }
      });
    },
    // 资源分类编辑
    handleRowEditClick(row) {
      console.log(row);
      this.editDialog = !this.editDialog;
      if (row) {
      } else {
        this.ruleForm = {};
      }
    },
    // 发馈人编辑
    feedbackHandleRowEditClick(row) {
      console.log(row);
      this.feedbackEditDialog = !this.feedbackEditDialog;
      if (row) {
      } else {
        this.feedbackRuleForm = {};
      }
    },
    // 资源分类弹框
    editDialogBtn() {
      let formName = "ruleForm";
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.editDialog = false;
          console.log(this.ruleForm, "this.ruleForm");
          return;
        } else {
          return;
        }
      });
    },
    // 发馈人弹框
    feedbackEditDialogBtn() {
      let formName = "feedbackRuleForm";
      this.$refs[formName].validate(valid => {
        if (valid) {
          this.feedbackEditDialog = false;
          console.log(this.feedbackRuleForm, "this.feedbackRuleForm");
          return;
        } else {
          return;
        }
      });
    }
  }
};
</script>
<style scoped lang="less">
* {
  box-sizing: border-box;
}
body {
  font-family: "Open Sans";
  font-size: 13px;
  color: #393939;
  line-height: 1.5;
}
// 左侧菜单栏
.leftTabs {
  width: 190px;
  position: fixed;
  left: 0;
  .elMenu {
    i {
      color: #00a83c;
    }
  }
  .el-radio-button__inner {
    padding: 0px;
  }
}
// 步骤条
.siteSteps {
  width: 95%;
  margin: 0 auto;
  text-align: center;
  font-size: 14px;
  padding: 3px;
  line-height: 36px;
  margin-bottom: 10px;
  .steps {
    list-style: none;
    display: table;
    width: 100%;
    padding: 0;
    margin: 0;
    position: relative;
    li {
      display: table-cell;
      text-align: center;
      width: 1%;
      .step {
        border: 5px solid #ced1d6;
        border-top-color: #ced1d6;
        border-right-color: #ced1d6;
        border-bottom-color: #ced1d6;
        border-left-color: #ced1d6;
        color: #546474;
        font-size: 16px;
        border-radius: 100%;
        background-color: #fff;
        position: relative;
        z-index: 2;
        display: inline-block;
        width: 40px;
        height: 40px;
        line-height: 32px;
        text-align: center;
      }
      .title {
        display: block;
        margin-top: 4px;
        max-width: 100%;
        color: #2b3d53;
        font-size: 14px;
        z-index: 104;
        text-align: center;
        table-layout: fixed;
        word-wrap: break-word;
      }
    }
  }
  .active .title {
    color: #2b3d53;
  }
  li::before {
    display: block;
    content: "";
    width: 100%;
    height: 1px;
    font-size: 0;
    overflow: hidden;
    border-top: 4px solid #ced1d6;
    border-top-color: rgb(206, 209, 214);
    position: relative;
    top: 23px;
    z-index: 1;
  }
  li:first-child::before {
    max-width: 51%;
    left: 50%;
  }
  li:last-child::before {
    max-width: 50%;
    width: 50%;
  }
  .steps li.active::before,
  .steps li.complete::before,
  .steps li.active .step,
  .steps li.complete .step {
    border-color: #58bf80;
  }
}
// 固定内容盒子
.content {
  width: 1400px;
  overflow: hidden;
  margin: 0 auto;
  background: #fff;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1);
  .resourseBox {
    border: 1px solid #e0e0e0;
    border-bottom: none;
    width: 1220px;
    min-height: 368px;
    padding: 10px 20px;
    margin-left: 180px;
    .pageHead {
      h1 {
        font-size: 14px;
        height: 40px;
        line-height: 40px;
        font-weight: 400;
        color: #8089a0;
        i {
          display: inline-block;
          font: normal normal normal 14px/1 FontAwesome;
          font-size: 14px;
          font-size: inherit;
          text-rendering: auto;
        }
      }
    }
    .addBtn {
      margin: 10px 0;
    }
  }
  .elPagination {
    text-align: center;
    margin-top: 10px;
  }
}
</style>

